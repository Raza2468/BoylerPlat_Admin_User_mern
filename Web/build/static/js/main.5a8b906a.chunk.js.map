{"version":3,"sources":["Component/Home.jsx","Component/Signup.jsx","core/index.js","Context/globaleContext.jsx","Component/Login.jsx","Component/Dashbard.jsx","Component/AdminDashboard.jsx","Component/LogoutButton.jsx","App.js","index.js"],"names":["Home","Signup","url","name","useRef","email","password","passwordConfirm","useState","error","setError","yeserror","yessetError","loading","setLoading","validateEmail","setValidateEmail","validateMessage","setValidateMessage","a","console","log","current","state","innerValue","axios","method","data","then","response","status","alert","message","catch","useEffect","res","className","md","noValidate","onSubmit","e","preventDefault","signup","Alert","variant","label","icon","type","ref","validate","onChange","target","value","class","disabled","to","window","location","href","split","defaults","withCredentials","GlobalStateContext","React","createContext","GlobalStateUpdateContext","useGlobalState","useContext","useGlobalStateUpdate","GlobalStateProvider","children","user","loginStatus","role","setData","prev","profile","err","Provider","Login","setGlobalState","event","document","getElementById","htmlFor","id","placeholder","color","Dashbard","AdminDashboard","LogoutButton","Button","onClick","App","globalState","Navbar","bg","Nav","Link","path","exact","ReactDOM","render","StrictMode"],"mappings":"iTAUeA,MAVf,WACI,OACI,8BACI,yC,mFCmIGC,G,OA5HA,WACX,IAAMC,EAAM,wBACRC,EAAOC,mBACPC,EAAQD,mBACRE,EAAWF,mBACXG,EAAkBH,mBALL,EAMOI,mBAAS,IANhB,mBAMZC,EANY,KAMLC,EANK,OAOaF,mBAAS,IAPtB,mBAOZG,EAPY,KAOFC,EAPE,OAQWJ,oBAAS,GARpB,mBAQZK,EARY,KAQHC,EARG,OASuBN,mBAAS,IAThC,mBASZO,EATY,KASGC,EATH,OAU6BR,mBAAS,IAVtC,mBAUVS,EAVU,KAUOC,EAVP,iDAcjB,sBAAAC,EAAA,yDAGIC,QAAQC,IAAIhB,EAAMiB,QAAQC,MAAMC,YAGO,KAAnCnB,EAAMiB,QAAQC,MAAMC,WAN5B,yCAOed,EAAS,oBAPxB,UAQeJ,EAASgB,QAAQC,MAAMC,aAAejB,EAAgBe,QAAQC,MAAMC,WARnF,yCAUed,EAAS,0BAVxB,OAaI,IACIE,EAAY,uBACZE,GAAW,GAGXW,IAAM,CACFC,OAAQ,OACRxB,IAAKA,EAAM,eACXyB,KAAM,CACFxB,KAAMA,EAAKmB,QAAQC,MAAMC,WACzBnB,MAAOA,EAAMiB,QAAQC,MAAMC,WAC3BlB,SAAUA,EAASgB,QAAQC,MAAMC,cAEtCI,MAAK,SAACC,GACDA,EAASF,KAAKG,OACdC,MAAMF,EAASF,KAAKK,YAIzBC,OAAM,SAACxB,GACNW,QAAQC,IAAIZ,MAGpB,SACIC,EAAS,6BAIbI,GAAW,GAzCf,4CAdiB,sBAkFjB,OAxBAoB,qBAAU,WAGNT,IAAM,CACFC,OAAQ,OAERxB,IAAKA,EAAM,sBACXyB,KAAM,CACFtB,MAAOU,KAEZa,MAAK,SAACO,GAIqB,OAAlBA,EAAIR,KAAKA,KACTT,EAAmB,eAEZiB,EAAIR,KAAKA,MAChBT,EAAmB,iCAIhC,CAACH,IAGA,cAAC,IAAD,CAAcqB,UAAU,gBAAxB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQC,GAAG,IAAX,SACI,uBAAMC,YAAU,EACZC,SAAU,SAACC,GACPA,EAAEC,iBAxFT,mCAyFOC,IAHR,UAKI,oBAAIN,UAAU,sBAAd,qBAEC3B,GAAS,cAACkC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBnC,IAClCE,GAAY,cAACgC,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0BjC,IACvC,sBAAKyB,UAAU,YAAf,UAEI,cAAC,IAAD,CAAUS,MAAM,iBAAiBC,KAAK,OAAOC,KAAK,OAAOC,IAAK7C,EAAM8C,UAAQ,IAE5E,gCACI,cAAC,IAAD,CAAUJ,MAAM,kBAAkBC,KAAK,WAAWC,KAAK,QAAQC,IAAK3C,EAAO6C,SAAU,SAACV,GAAD,OAAOxB,EAAiBwB,EAAEW,OAAOC,UACtH,sBAAMC,MAAM,eAAZ,SAA4BpC,OAGhC,cAAC,IAAD,CAAU4B,MAAM,qBAAqBC,KAAK,OAAOC,KAAK,WAAWC,IAAK1C,EAAU2C,UAAQ,IACxF,cAAC,IAAD,CAAUJ,MAAM,wBAAwBC,KAAK,OAAOC,KAAK,WAAWC,IAAKzC,EAAiB0C,UAAQ,IAClG,uBACA,cAAC,IAAD,aAAYb,UAAU,cAAtB,YAA6C,gBAG7C,0BAEJ,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAQkB,SAAUzC,EAASkC,KAAK,SAAhC,qBACA,0DAA4B,cAAC,IAAD,CAAMQ,GAAG,UAAT,oBAA5B,qBC3HxBrD,EAAMsD,OAAOC,SAASC,KAAKC,MAAM,KAUtBzD,EAPXA,EAFS,UAATA,EAAI,GAEE,wBAGA,uCCFVuB,IAAMmC,SAASC,iBAAkB,EAGjC,IAAMC,EAAqBC,IAAMC,gBAC3BC,EAA2BF,IAAMC,gBAG1BE,EAAiB,kBAAMC,qBAAWL,IAClCM,EAAuB,kBAAMD,qBAAWF,IAG9C,SAASI,EAAT,GAA4C,IAAbC,EAAY,EAAZA,SAAY,EAItB9D,mBAAS,CAC7B+D,KAAM,KACNC,aAAa,EACbC,KAAM,OAPoC,mBAIvC9C,EAJuC,KAIjC+C,EAJiC,KAqC9C,OA1BAxC,qBAAU,WACNT,IAAM,CACFC,OAAQ,MACRxB,IAAKA,EAAG,gBAET0B,MAAK,SAACO,GAELuC,GAAQ,SAAAC,GAAI,kCAAUA,GAAV,IAAgBH,aAAa,EAAMD,KAAMpC,EAAIR,KAAKiD,QAASH,KAAMtC,EAAIR,KAAKiD,QAAQH,aAE/FxC,OAAM,SAAC4C,GACN,OAAOH,GAAQ,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBF,KAAM,iBAGvCrD,QAAQC,IAAIwD,EAAK,sBAW3B,IAGE,cAACf,EAAmBgB,SAApB,CAA6B1B,MAAOzB,EAApC,SACI,cAACsC,EAAyBa,SAA1B,CAAmC1B,MAAOsB,EAA1C,SACKJ,MC9CjB7C,IAAMmC,SAASC,iBAAkB,EAiElBkB,MA/Df,WAEwBb,IAApB,IACMc,EAAiBZ,IAiCvB,OAEI,cAAC,IAAD,CAAchC,UAAU,gBAAxB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQC,GAAG,IAAX,SACI,uBAAME,SAnCtB,SAAoB0C,GAChBA,EAAMxC,iBACNhB,IAAM,CACFC,OAAQ,OACRxB,IAAMA,EAAI,cAEVyB,KAAM,CACFtB,MAAO6E,SAASC,eAAe,SAAS/B,MACxC9C,SAAU4E,SAASC,eAAe,YAAY/B,SAEnDxB,MAAK,SAACC,GACLT,QAAQC,IAAI,kBAAmBQ,EAASF,MAChB,MAApBE,EAASC,QAETkD,GAAe,SAAAL,GACX,OAAO,2BAAKA,GAAZ,IAAkBJ,KAAM1C,EAASF,KAAK4C,KAAME,KAAM5C,EAASF,KAAK4C,KAAKE,UAEzE1C,MAAMF,EAASF,KAAKK,QAAQ,WAC5BZ,QAAQC,IAAI,aAIZD,QAAQC,IAAIQ,EAASF,KAAKK,QAAQ,aAClCD,MAAMF,EAASF,KAAKK,QAAQ,YAEjCC,OAAM,SAACxB,GACNW,QAAQC,IAAIZ,EAAM,mBASkB2B,UAAU,aAAtC,UACI,mBAAGA,UAAU,sBAAb,qBACA,uBAAOgD,QAAQ,0BAA0BhD,UAAU,YAAnD,wBAGA,uBAAOW,KAAK,QAAQsC,GAAG,QAAQjD,UAAU,eAAekD,YAAY,qBACpE,uBACA,uBAAOF,QAAQ,6BAA6BhD,UAAU,YAAtD,2BAGA,uBAAOW,KAAK,WAAWsC,GAAG,WAAWjD,UAAU,eAAekD,YAAY,wBAC1E,qBAAKlD,UAAU,mBAAf,SACI,cAAC,IAAD,CAAQmD,MAAM,SAASxC,KAAK,SAA5B,+BC/Db,SAASyC,IACpB,OACI,8BACI,kDCHG,SAASC,IACpB,OACI,8BACI,mD,oBC6BGC,MA5Bf,WAGI,IACMV,EAAiBZ,IAqBvB,OAAQ,cAACuB,EAAA,EAAD,CAAQ/C,QAAQ,SAASgD,QAnBjC,WACInE,IAAM,CACFC,OAAQ,OACRxB,IAAKA,sCAEN0B,MAAK,SAACC,GACmB,MAApBA,EAASC,SAETC,MAAMF,EAASF,KAAKK,SAIpBgD,GAAe,SAACL,GAAD,mBAAC,eAAeA,GAAhB,IAAsBH,aAAa,EAAOC,KAAM,YAAaF,KAAM,cAEvF,SAAC9D,GACAW,QAAQC,IAAIZ,EAAMuB,aAIlB,qB,kBC8JG6D,MAlKf,WACE,IAAMC,EAAc5B,IACpB9C,QAAQC,IAAI,gBAAiByE,GAC7B,IAAMd,EAAiBZ,IAoCvB,OAjCAlC,qBAAU,WACRT,IAAM,CACJC,OAAQ,MACRxB,IAAK,mCACL2D,iBAAiB,IAChBjC,MAAK,SAACC,GACPT,QAAQC,IAAI,kBAAmBQ,EAASF,MAExCqD,GAAe,SAAAL,GACb,OAAO,2BAAKA,GAAZ,IAAkBJ,KAAM1C,EAASF,KAAKiD,QAASH,KAAM5C,EAASF,KAAKiD,QAAQH,aAe5ExC,OAAM,SAACxB,GACRW,QAAQC,IAAIZ,EAAO,oBAGpB,IAMD,qCACE,8BACE,eAACsF,EAAA,EAAD,CAAQC,GAAG,OAAOpD,QAAQ,OAA1B,UACyB,UAArBkD,EAAYrB,KACZ,qCACE,cAACwB,EAAA,EAAD,CAAK7D,UAAU,UAAf,SACE,cAAC6D,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAAM3C,GAAG,IAAT,iCAIZ,cAAC,EAAD,OACI,KAGe,SAArBuC,EAAYrB,KACZ,qCACE,cAACwB,EAAA,EAAD,CAAK7D,UAAU,UAAf,SACE,cAAC6D,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAAM3C,GAAG,IAAT,gCAIZ,cAAC,EAAD,OACI,KAEe,cAArBuC,EAAYrB,KACZ,mCACE,eAACwB,EAAA,EAAD,CAAK7D,UAAU,UAAf,UACE,cAAC6D,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAAM3C,GAAG,UAAT,sBACV,cAAC0C,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAAM3C,GAAG,IAAT,oBACV,cAAC0C,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAAM3C,GAAG,SAAT,0BAER,UAOW,OAArBuC,EAAYrB,KACZ,cAAC,IAAD,UACE,cAAC,IAAD,CAAO0B,KAAK,IAAZ,SAAiB,mDAEjB,KAKmB,cAArBL,EAAYrB,KACZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,OAAK,EAACD,KAAK,IAAlB,SAAsB,cAAC,EAAD,MAEtB,cAAC,IAAD,CAAOA,KAAK,UAAZ,SAAsB,cAAC,EAAD,MAEtB,cAAC,IAAD,CAAOA,KAAK,SAAZ,SAAqB,cAAC,EAAD,MAErB,cAAC,IAAD,CAAOA,KAAK,IAAZ,SAAiB,cAAC,IAAD,CAAU5C,GAAG,WAI9B,KAMmB,SAArBuC,EAAYrB,KACZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,OAAK,EAACD,KAAK,IAAlB,SAAsB,cAACX,EAAD,MAQtB,cAAC,IAAD,CAAOW,KAAK,IAAZ,SAAgB,cAAC,IAAD,CAAU5C,GAAG,WAE7B,KAKoB,UAArBuC,EAAYrB,KACX,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO2B,OAAK,EAACD,KAAK,IAAlB,SAAsB,cAACV,EAAD,MAItB,cAAC,IAAD,CAAOU,KAAK,IAAZ,SAAiB,cAAC,IAAD,CAAU5C,GAAG,WAK9B,SCvJZ8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAClC,EAAD,UACE,cAAC,EAAD,UAINa,SAASC,eAAe,W","file":"static/js/main.5a8b906a.chunk.js","sourcesContent":["function Home() {\r\n    return(\r\n        <div>\r\n            <h1>\r\n                Home\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import { useEffect, useRef, useState } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, Typography } from 'mdbreact';\r\nimport { Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { json } from \"body-parser\";\r\n// import url from \"../core/index\";\r\n\r\n\r\n\r\nconst Signup = () => {\r\n    const url = \"http://localhost:3001\";\r\n    let name = useRef();\r\n    let email = useRef();\r\n    let password = useRef();\r\n    let passwordConfirm = useRef();\r\n    let [error, setError] = useState('')\r\n    let [yeserror, yessetError] = useState('')\r\n    let [loading, setLoading] = useState(false)\r\n    let [validateEmail, setValidateEmail] = useState(\"\");\r\n    const [validateMessage, setValidateMessage] = useState(\"\");\r\n    // let history = useHistory()\r\n\r\n\r\n    async function signup() {\r\n        // e.preventDefault()\r\n\r\n        console.log(email.current.state.innerValue);\r\n        // console.log(password.current.value );\r\n        // console.log(passwordConfirm.current.value );\r\n        if (email.current.state.innerValue === \"\") {\r\n            return setError('email not found')\r\n        } else if (password.current.state.innerValue !== passwordConfirm.current.state.innerValue) {\r\n            // alert('Password do not match')\r\n            return setError('Password do not match')\r\n\r\n        }\r\n        try {\r\n            yessetError(\"Sign up succes full\")\r\n            setLoading(true)\r\n            // await signup(email.current.state.innerValue, password.current.state.innerValue)\r\n            // history.push(\"/product\")\r\n            axios({\r\n                method: 'post',\r\n                url: url + '/auth/signup',\r\n                data: {\r\n                    name: name.current.state.innerValue,\r\n                    email: email.current.state.innerValue,\r\n                    password: password.current.state.innerValue,\r\n                }\r\n            }).then((response) => {\r\n                if (response.data.status === 200) {\r\n                    alert(response.data.message)\r\n                } else {\r\n                    alert(response.data.message);\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        }\r\n        catch {\r\n            setError('Fail to craete an account')\r\n\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(validateEmail,\"validateEmail\");\r\n\r\n        axios({\r\n            method: \"post\",\r\n            // url: `${url}/auth/validateEmail`,\r\n            url: url + '/auth/validateEmail',\r\n            data: {\r\n                email: validateEmail,\r\n            },\r\n        }).then((res) => {\r\n           \r\n            // console.log(res, \"res\");\r\n           \r\n                if (res.data.data === null) {\r\n                    setValidateMessage(\"email valid\");\r\n\r\n                } else if (res.data.data) {\r\n                    setValidateMessage(\"email already registered\");\r\n\r\n                }\r\n        });\r\n    }, [validateEmail]);\r\n\r\n    return (\r\n        <MDBContainer className=\"singup_boader\">\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form noValidate\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            signup();\r\n                        }}>\r\n                        <h1 className=\"h1 text-center mb-4\">Sign up</h1>\r\n                        {/* {currentUser.email} */}\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        {yeserror && <Alert variant=\"success\">{yeserror}</Alert>}\r\n                        <div className=\"grey-text\">\r\n                        {/* className={transaction.amount < 0 ? 'minus' : 'plus'} */}\r\n                            <MDBInput label=\"Type your name\" icon=\"user\" type=\"text\" ref={name} validate />\r\n\r\n                            <div>\r\n                                <MDBInput label=\"Type your email\" icon=\"envelope\" type=\"email\" ref={email} onChange={(e) => setValidateEmail(e.target.value)} />\r\n                                <span class=\"text-primary\">{validateMessage}</span>\r\n                            </div>\r\n\r\n                            <MDBInput label=\"Type your password\" icon=\"lock\" type=\"password\" ref={password} validate />\r\n                            <MDBInput label=\"Type your RE-password\" icon=\"lock\" type=\"password\" ref={passwordConfirm} validate />\r\n                            <br />\r\n                            <Typography className=\"text-muted\" className=\"float-right\">\r\n                              \r\n                              </Typography>\r\n                            <br />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <MDBBtn disabled={loading} type=\"submit\">Sign up</MDBBtn>\r\n                            <p>Alerady Have an account? <Link to=\"./Login\">Log In</Link> </p>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer >\r\n\r\n    );\r\n};\r\n\r\nexport default Signup;","\r\nvar url = window.location.href.split(\":\");\r\nif (url[0]===\"https\")\r\n{\r\n    url = \"http://localhost:3001\"\r\n}\r\nelse{\r\n    url = \"https://pro-mern-login.herokuapp.com\"\r\n    \r\n}\r\n\r\nexport default url;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from 'axios'\r\nimport url from \"../core/index\";\r\n\r\n// Allowing credentials true for axios \r\naxios.defaults.withCredentials = true;\r\n\r\n// Calling global context from React\r\nconst GlobalStateContext = React.createContext()\r\nconst GlobalStateUpdateContext = React.createContext()\r\n\r\n// Creating global Context\r\nexport const useGlobalState = () => useContext(GlobalStateContext)\r\nexport const useGlobalStateUpdate = () => useContext(GlobalStateUpdateContext)\r\n\r\n// Making Global State component\r\nexport function GlobalStateProvider({ children }) {\r\n\r\n    // const url = \"http://localhost:3001\";\r\n\r\n    const [data, setData] = useState({\r\n        user: null,\r\n        loginStatus: false,\r\n        role: null,\r\n    })\r\n    \r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"get\",\r\n            url: url + `/getProfile`,\r\n\r\n        }).then((res) => {\r\n      \r\n            setData(prev => ({ ...prev, loginStatus: true, user: res.data.profile, role: res.data.profile.role }));\r\n            //     console.log('check', res.data.profile.role)\r\n        }).catch((err) => {\r\n            return setData((prev) => ({ ...prev, role: \"loggedout\" })),\r\n            // alert( \"token expair loggedout\")\r\n                // setData((prev) => ({ ...prev, loginStatus: false, user: null, role: null}))\r\n                console.log(err, \"loggedout err\");\r\n            // console.log(JSON.stringify(\"Error===========\", err.response.status));\r\n            // console.log(err);\r\n            // if (!err.response || err.response.status !== 200) {\r\n            //     setData((prev) => ({ ...prev, role: \"loggedout\" }));\r\n            // }\r\n        })\r\n\r\n        // return () => {\r\n        //     console.log(\"cleanup\");\r\n        // }\r\n    },[]);\r\n\r\n    return (\r\n        <GlobalStateContext.Provider value={data}>\r\n            <GlobalStateUpdateContext.Provider value={setData}>\r\n                {children}\r\n            </GlobalStateUpdateContext.Provider>\r\n        </GlobalStateContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { Alert } from 'react-bootstrap'\r\nimport axios from \"axios\";\r\nimport url from \"../core/index\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useGlobalState, useGlobalStateUpdate } from '../Context/globaleContext'\r\n\r\n\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction Login() {\r\n\r\n    const globalState = useGlobalState();\r\n    const setGlobalState = useGlobalStateUpdate();\r\n\r\n\r\n    function hanldlogin(event) {\r\n        event.preventDefault();\r\n        axios({\r\n            method: 'post',\r\n            url:  url+'/auth/Login',\r\n            // '/auth/validateEmail'\r\n            data: {\r\n                email: document.getElementById('email').value,\r\n                password: document.getElementById('password').value\r\n            }, // withCredentials: true\r\n        }).then((response) => {\r\n            console.log(\"response.data: \", response.data);\r\n            if (response.status === 200) {\r\n\r\n                setGlobalState(prev => {\r\n                    return { ...prev, user: response.data.user, role: response.data.user.role }\r\n                })\r\n                alert(response.data.message,\"success\")\r\n                console.log(\"if,succ\");\r\n                // history.push('/AdminDashboard')\r\n            } else {\r\n                \r\n                console.log(response.data.message,\"ELSW,succ\");\r\n                alert(response.data.message,\"else\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error,\"error email\");\r\n        });\r\n\r\n    }\r\n    return (\r\n\r\n        <MDBContainer className=\"singup_boader\">\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form onSubmit={hanldlogin} className=\"formcenter\">\r\n                        <p className=\"h4 text-center mb-4\">Sign in</p>\r\n                        <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n                            Your email\r\n                        </label>\r\n                        <input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Enter Your Email\" />\r\n                        <br />\r\n                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n                            Your password\r\n                        </label>\r\n                        <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Enter Your Password\" />\r\n                        <div className=\"text-center mt-4\">\r\n                            <MDBBtn color=\"unique\" type=\"submit\">Login</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer >\r\n\r\n    )\r\n\r\n}\r\nexport default Login\r\n","import React from 'react'\r\n\r\nexport default function Dashbard() {\r\n    return (\r\n        <div>\r\n            <h1>User Dashboard</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AdminDashboard() {\r\n    return (\r\n        <div>\r\n            <h1>Admin Dashboard</h1>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { useGlobalStateUpdate } from \"../Context/globaleContext\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router-dom';\r\n// import url from '../core/index'\r\n\r\nfunction LogoutButton() {\r\n    // const history = useHistory();\r\n\r\n    let url = 'http://localhost:3001'\r\n    const setGlobalState = useGlobalStateUpdate();\r\n\r\n    function logout() {\r\n        axios({\r\n            method: 'post',\r\n            url: url + '/auth/logout',\r\n            // withCredentials: true,\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n\r\n                alert(response.data.message)\r\n                // Router.History.back();\r\n                // history.goBack()\r\n\r\n                setGlobalState((prev) => ({ ...prev, loginStatus: false, role: \"loggedout\", user: null }))\r\n            }\r\n        }, (error) => {\r\n            console.log(error.message);\r\n        });\r\n\r\n    }\r\n    return (<Button variant=\"danger\" onClick={logout}>Logout</Button>)\r\n}\r\n\r\nexport default LogoutButton;","import React from \"react\";\r\n// import {\r\n//   MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBIcon\r\n// } from \"mdbreact\";\r\nimport './App.css';\r\nimport Home from './Component/Home';\r\nimport Signup from './Component/Signup';\r\nimport Login from './Component/Login'\r\nimport Dashbard from './Component/Dashbard'\r\nimport AdminDashboard from './Component/AdminDashboard'\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useGlobalState, useGlobalStateUpdate } from './Context/globaleContext'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link, Redirect\r\n} from \"react-router-dom\";\r\nimport LogoutButton from './Component/LogoutButton';\r\nimport { Navbar, Form, FormControl, Nav, Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n// import AdminDashboard from \"./components/AdminDashboard\";\r\n// import AddProduct from './components/AddProduct';\r\n// import Checkout from './components/Checkoutform';\r\n// import Basket from './components/Basket';\r\n// import Myorders from './components/Myorders';\r\nfunction App() {\r\n  const globalState = useGlobalState();\r\n  console.log(\"globalState: \", globalState);\r\n  const setGlobalState = useGlobalStateUpdate();\r\n\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'get',\r\n      url: 'http://localhost:3001/getProfile',\r\n      withCredentials: true\r\n    }).then((response) => {\r\n      console.log(\"response.data: \", response.data);\r\n\r\n      setGlobalState(prev => {\r\n        return { ...prev, user: response.data.profile, role: response.data.profile.role }\r\n      })\r\n      // if (response.status === 200) {\r\n\r\n      //     setGlobalState(prev => {\r\n      //         return { ...prev, user: response.data.user, role: response.data.user.role }\r\n      //     })\r\n      //     alert(response.data.message,\"success\")\r\n      //     console.log(\"if,succ\");\r\n      //     // history.push('/AdminDashboard')\r\n      // } else {\r\n\r\n      //     console.log(response.data.message,\"ELSW,succ\");\r\n      //     alert(response.data.message,\"else\");\r\n      // }\r\n    }).catch((error) => {\r\n      console.log(error, \"error email\");\r\n    });\r\n\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          {(globalState.role === 'admin') ?\r\n            <>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link><Link to=\"/\">Admin Dashboard</Link></Nav.Link>\r\n\r\n                {/* <Nav.Link><Link to=\"/addproducts\">Add Product</Link></Nav.Link> */}\r\n              </Nav>\r\n              <LogoutButton />\r\n            </> : null\r\n          }\r\n\r\n          {(globalState.role === 'user') ?\r\n            <>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link><Link to=\"/\">user Dashboard</Link></Nav.Link>\r\n\r\n                {/* <Nav.Link><Link to=\"/myorders\">MY Order</Link></Nav.Link> */}\r\n              </Nav>\r\n              <LogoutButton />\r\n            </> : null\r\n          }\r\n          {(globalState.role === 'loggedout') ?\r\n            <>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link><Link to=\"/signup\">Signup</Link></Nav.Link>\r\n                <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\r\n                <Nav.Link><Link to=\"/login\">Login</Link></Nav.Link>\r\n              </Nav>\r\n            </> : null\r\n          }\r\n        </Navbar>\r\n      </nav>\r\n\r\n      {/* ROLE NULL////////////////////////////////////// */}\r\n\r\n      {(globalState.role === null) ?\r\n        <Switch>\r\n          <Route path=\"*\" ><h1>LOADING......</h1></Route>\r\n        </Switch>\r\n        : null\r\n      }\r\n\r\n      {/* ROLE LOGGEDOUT////////////////////////////////////// */}\r\n\r\n      {(globalState.role === \"loggedout\") ?\r\n        <Switch>\r\n          <Route exact path=\"/\"><Home /></Route>\r\n\r\n          <Route path=\"/signup\"><Signup /></Route>\r\n\r\n          <Route path=\"/login\"><Login /></Route>\r\n\r\n          <Route path=\"*\" ><Redirect to=\"/\" /></Route>\r\n\r\n        </Switch>\r\n\r\n        : null\r\n      }\r\n\r\n\r\n\r\n      {/* ROLE USER ////////////////////////////////////// */}\r\n      {(globalState.role === \"user\") ?\r\n        <Switch>\r\n          <Route exact path=\"/\"><Dashbard /></Route>\r\n\r\n          {/* <Route path=\"/basket\"><Basket /></Route>\r\n\r\n          <Route path=\"/Checkout\"><Checkout /></Route>\r\n\r\n          <Route path=\"/myorders\"><Myorders /></Route> */}\r\n\r\n          <Route path=\"*\"><Redirect to=\"/\" /></Route>\r\n        </Switch>\r\n        : null\r\n      }\r\n\r\n      {/* ROLE ADMIN ////////////////////////////////////// */}\r\n      {\r\n        (globalState.role === \"admin\") ?\r\n          <Switch>\r\n\r\n            <Route exact path=\"/\"><AdminDashboard /></Route>\r\n\r\n            {/* <Route path=\"/addproducts\"><AddProduct /></Route> */}\r\n\r\n            <Route path=\"*\" ><Redirect to=\"/\" /></Route>\r\n\r\n            {/* <Route path=\"*\" ><h1>404! Page Not Found</h1></Route> */}\r\n\r\n          </Switch>\r\n          : null\r\n      }\r\n\r\n      {/* ADMIN ROUTES REGISTERED/////////////////////////////////////////// */}\r\n      {/* {a === \"admin\" ?\r\n        <Switch>\r\n          <Route exact path=\"/\" ><h2>ADMIn found successfully</h2></Route>\r\n          <Route exact path=\"/abc\" ><h2>ADMIn found abc</h2></Route>\r\n          <Route path=\"*\" ><h2>ADMIN not found</h2></Route>\r\n        </Switch>\r\n        : null\r\n      } */}\r\n\r\n      {/* USER ROUTES REGISTERED/////////////////////////////////////////// */}\r\n\r\n      {/* {a === \"user\" ?\r\n        <Switch>\r\n          <Route exact path=\"/\" ><h2>USER found successfully</h2></Route>\r\n          <Route exact path=\"/abc\" ><h2>USER found abc</h2></Route>\r\n          <Route path=\"*\" ><h2>USER not found</h2></Route>\r\n        </Switch>\r\n        : null\r\n      } */}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n// class App extends Component {\r\n\r\n//   state = {\r\n//     isOpen: false\r\n//   };\r\n\r\n//   toggleCollapse = () => {\r\n//     this.setState({ isOpen: !this.state.isOpen });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <Router>\r\n//           <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n//             <MDBNavbarBrand>\r\n//               <strong className=\"white-text\">Navbar</strong>\r\n//             </MDBNavbarBrand>\r\n//             <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n//             <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n//               <MDBNavbarNav left>\r\n//                 <MDBNavItem active>\r\n//                   <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink to=\"#!\">Features</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink to=\"#!\">Pricing</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//               </MDBNavbarNav>\r\n//               <MDBNavbarNav right>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n//                     <MDBIcon fab icon=\"twitter\" />\r\n//                   </MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n//                     <MDBIcon fab icon=\"google-plus-g\" />\r\n//                   </MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink to=\"/login\">Login</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink to=\"/signup\">Signup</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//               </MDBNavbarNav>\r\n//             </MDBCollapse>\r\n//           </MDBNavbar>\r\n\r\n//           <Switch>\r\n//             {(globalState.loginStatus === false) ?\r\n//               <Route path=\"/\">\r\n//                 <Login />\r\n//               </Route> :\r\n//               <Route path=\"/\">\r\n//                 <Dashboard />\r\n//               </Route>\r\n\r\n//             }\r\n//             <Route exact path=\"/home\">\r\n//               <Home />\r\n//             </Route>\r\n//             <Route path=\"/signup\">\r\n//               <Signup />\r\n//             </Route>\r\n//           </Switch>\r\n\r\n//         </Router>\r\n//       </>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { GlobalStateProvider } from './Context/globaleContext';\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <GlobalStateProvider>\r\n        <App />\r\n      </GlobalStateProvider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}