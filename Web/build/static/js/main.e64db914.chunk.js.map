{"version":3,"sources":["Component/Home.jsx","Component/Signup.jsx","Context/globaleContext.jsx","Component/Login.jsx","Component/Dashbard.jsx","Component/AdminDashboard.jsx","Component/LogoutButton.jsx","App.js","index.js"],"names":["Home","Signup","url","name","useRef","email","password","passwordConfirm","useState","error","setError","yeserror","yessetError","loading","setLoading","useHistory","a","console","log","current","state","innerValue","axios","method","data","then","response","status","alert","message","catch","className","md","noValidate","onSubmit","e","preventDefault","signup","Alert","variant","label","icon","type","ref","validate","disabled","to","GlobalStateContext","React","createContext","GlobalStateUpdateContext","useGlobalState","useContext","useGlobalStateUpdate","GlobalStateProvider","children","user","role","loginStatus","setData","useEffect","withCredentials","res","profile","prev","err","Provider","value","defaults","Login","setGlobalState","event","document","getElementById","htmlFor","id","placeholder","color","Dashbard","AdminDashboard","LogoutButton","Button","onClick","App","globalState","Navbar","bg","Nav","Link","path","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e64db914.chunk.js","sourcesContent":["function Home() {\r\n    return(\r\n        <div>\r\n            <h1>\r\n                Home\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import { useEffect, useRef, useState } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n// import url from \"../core/index\";\r\n\r\n\r\n\r\nconst Signup = () => {\r\n    const url = \"http://localhost:3001\";\r\n   let name = useRef();\r\n    let email = useRef();\r\n    let password = useRef();\r\n    let passwordConfirm = useRef(); \r\n    let [error, setError] = useState('')\r\n    let [yeserror, yessetError] = useState('')\r\n    let [loading, setLoading] = useState(false)\r\n    let history = useHistory()\r\n\r\n\r\n    async function signup() {\r\n        // e.preventDefault()\r\n\r\n        console.log(email.current.state.innerValue);\r\n        // console.log(password.current.value );\r\n        // console.log(passwordConfirm.current.value );\r\n        if(email.current.state.innerValue === \"\"){\r\n            return setError('email not found')\r\n        }else if (password.current.state.innerValue !== passwordConfirm.current.state.innerValue) {\r\n            // alert('Password do not match')\r\n            return setError('Password do not match')\r\n\r\n        }\r\n        try {\r\n            yessetError(\"Sign up succes full\")\r\n            setLoading(true)\r\n            // await signup(email.current.state.innerValue, password.current.state.innerValue)\r\n            // history.push(\"/product\")\r\n            axios({\r\n                method: 'post',\r\n                url: url + '/auth/signup',\r\n                data: {\r\n                    name: name.current.state.innerValue,\r\n                    email: email.current.state.innerValue,\r\n                    password: password.current.state.innerValue,\r\n                }\r\n            }).then((response) => {\r\n                if (response.data.status === 200) {\r\n                    alert(response.data.message)\r\n                } else {\r\n                    alert(response.data.message);\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        }\r\n        catch {\r\n            setError('Fail to craete an account')\r\n\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <MDBContainer className=\"singup_boader\">\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form noValidate\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            signup();\r\n                        }}>\r\n                        <h1 className=\"h1 text-center mb-4\">Sign up</h1>\r\n                        {/* {currentUser.email} */}\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        {yeserror && <Alert variant=\"success\">{yeserror}</Alert>}\r\n                        <div className=\"grey-text\">\r\n                            <MDBInput label=\"Type your name\" icon=\"user\" type=\"text\" ref={name} validate />\r\n                            <MDBInput label=\"Type your email\" icon=\"envelope\" type=\"email\" ref={email} />\r\n                            <MDBInput label=\"Type your password\" icon=\"lock\" type=\"password\" ref={password} validate />\r\n                            <MDBInput label=\"Type your RE-password\" icon=\"lock\" type=\"password\" ref={passwordConfirm} validate />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <MDBBtn disabled={loading} type=\"submit\">Sign up</MDBBtn>\r\n                            <p>Alerady Have an account? <Link to=\"./Login\">Log In</Link> </p>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer >\r\n\r\n    );\r\n};\r\n\r\nexport default Signup;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from 'axios'\r\n// import url from \"../core/index\";\r\nconst GlobalStateContext = React.createContext()\r\nconst GlobalStateUpdateContext = React.createContext()\r\n\r\nexport const useGlobalState = () => useContext(GlobalStateContext)\r\nexport const useGlobalStateUpdate = () => useContext(GlobalStateUpdateContext)\r\n\r\nexport function GlobalStateProvider({ children }) {\r\n    const url = \"http://localhost:3001\";\r\n    const [data, setData] = useState({\r\n        user: null,\r\n        role: null,\r\n        loginStatus: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"get\",\r\n            url: url + `/getProfile`,\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            console.log(\"context response\", res.data.profile, res.status);\r\n            if (res.status === 200) {\r\n\r\n                setData((prev) => ({\r\n                    ...prev,\r\n                    user: res.data.profile,\r\n                    loginStatus: true ,\r\n                    role: res.data.profile.role\r\n                }))\r\n                console.log('check', res.data.profile.role)\r\n            }\r\n        }).catch((err) => {\r\n            return setData((prev) => ({ ...prev, role: \"loggedout\" }));\r\n        //    return setData((prev) => ({ ...prev, loginStatus: \"false\" , user : null , role : null}))\r\n\r\n            // console.log(JSON.stringify(\"Error===========\", err.response.status));\r\n            // console.log(err);\r\n            // if (!err.response || err.response.status !== 200) {\r\n            //     setData((prev) => ({ ...prev, role: \"loggedout\" }));\r\n            // }\r\n        })\r\n\r\n        // return () => {\r\n        //     console.log(\"cleanup\");\r\n        // }\r\n    }, []);\r\n\r\n    return (\r\n        <GlobalStateContext.Provider value={data}>\r\n            <GlobalStateUpdateContext.Provider value={setData}>\r\n                {children}\r\n            </GlobalStateUpdateContext.Provider>\r\n        </GlobalStateContext.Provider>\r\n    )\r\n}\r\n","import { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { Alert } from 'react-bootstrap'\r\nimport axios from \"axios\";\r\n// import url from \"../core/index\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useGlobalState, useGlobalStateUpdate } from '../Context/globaleContext'\r\n\r\n\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction Login() {\r\n  \r\n    const globalState = useGlobalState();\r\n    const setGlobalState = useGlobalStateUpdate();\r\n\r\n   \r\n    function hanldlogin(event) {\r\n        event.preventDefault();\r\n        const url = \"http://localhost:3001\";\r\n        axios({\r\n            method: 'post',\r\n            url: url + '/auth/Login',\r\n            data: {\r\n                email: document.getElementById('email').value,\r\n                password: document.getElementById('password').value\r\n            }, withCredentials: true\r\n        }).then((response) => {\r\n            console.log(\"response.data: \", response.data);\r\n            if (response.status === 200) {\r\n                // alert(response.data.message)\r\n                // history.push('/AdminDashboard')\r\n                setGlobalState(prev => {\r\n                    return { ...prev, user: response.data.user, role: response.data.user.role }\r\n                })\r\n            } else {\r\n                // alert(response.data.message);\r\n                alert(response.data.message);\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n    return (\r\n\r\n        <MDBContainer className=\"singup_boader\">\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form onSubmit={hanldlogin} className=\"formcenter\">\r\n                        <p className=\"h4 text-center mb-4\">Sign in</p>\r\n                        <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n                            Your email\r\n                            </label>\r\n                        <input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Enter Your Email\" />\r\n                        <br />\r\n                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n                            Your password\r\n                            </label>\r\n                        <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Enter Your Password\" />\r\n                        <div className=\"text-center mt-4\">\r\n                            <MDBBtn color=\"unique\" type=\"submit\">Login</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer >\r\n\r\n    )\r\n\r\n}\r\nexport default Login\r\n","import React from 'react'\r\n\r\nexport default function Dashbard() {\r\n    return (\r\n        <div>\r\n            <h1>User Dashboard</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AdminDashboard() {\r\n    return (\r\n        <div>\r\n            <h1>Admin Dashboard</h1>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { useGlobalStateUpdate } from \"../Context/globaleContext\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router-dom';\r\n// import url from '../core/index'\r\n\r\nfunction LogoutButton() {\r\n    const history = useHistory();\r\n\r\n    let url = 'http://localhost:3001'\r\n    const setGlobalState = useGlobalStateUpdate();\r\n\r\n    function logout() {\r\n        axios({\r\n            method: 'post',\r\n            url: url + '/auth/logout',\r\n            withCredentials: true,\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                alert(response.data.message)\r\n                // Router.History.back();\r\n                // history.goBack()\r\n\r\n                setGlobalState((prev) => ({ ...prev, loginStatus: false, role: \"loggedout\", user: null }))\r\n            }\r\n        }, (error) => {\r\n            console.log(error.message);\r\n        });\r\n\r\n    }\r\n    return (<Button variant=\"danger\" onClick={logout}>Logout</Button>)\r\n}\r\n\r\nexport default LogoutButton;","import React from \"react\";\r\n// import {\r\n//   MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBIcon\r\n// } from \"mdbreact\";\r\nimport './App.css';\r\nimport Home from './Component/Home';\r\nimport Signup from './Component/Signup';\r\nimport Login from './Component/Login'\r\nimport Dashbard from './Component/Dashbard'\r\nimport AdminDashboard from './Component/AdminDashboard'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link, Redirect\r\n} from \"react-router-dom\";\r\nimport LogoutButton from './Component/LogoutButton';\r\nimport { Navbar, Form, FormControl, Nav, Button } from 'react-bootstrap';\r\nimport { useGlobalState } from './Context/globaleContext'\r\n// import AdminDashboard from \"./components/AdminDashboard\";\r\n// import AddProduct from './components/AddProduct';\r\n// import Checkout from './components/Checkoutform';\r\n// import Basket from './components/Basket';\r\n// import Myorders from './components/Myorders';\r\nfunction App() {\r\n  const globalState = useGlobalState();\r\n  console.log(\"globalState: \", globalState);\r\n  return (\r\n    <>\r\n      <nav>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          {(globalState.role === 'admin') ?\r\n            <>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link><Link to=\"/\">Admin Dashboard</Link></Nav.Link>\r\n\r\n                {/* <Nav.Link><Link to=\"/addproducts\">Add Product</Link></Nav.Link> */}\r\n              </Nav>\r\n              <LogoutButton />\r\n            </> : null\r\n          }\r\n\r\n          {(globalState.role === 'user') ?\r\n            <>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link><Link to=\"/\">user Dashboard</Link></Nav.Link>\r\n\r\n                {/* <Nav.Link><Link to=\"/myorders\">MY Order</Link></Nav.Link> */}\r\n              </Nav>\r\n              <LogoutButton />\r\n            </> : null\r\n          }\r\n          {(globalState.role === 'loggedout') ?\r\n            <>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link><Link to=\"/signup\">Signup</Link></Nav.Link>\r\n                <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\r\n                <Nav.Link><Link to=\"/login\">Login</Link></Nav.Link>\r\n              </Nav>\r\n            </> : null\r\n          }\r\n        </Navbar>\r\n      </nav>\r\n\r\n      {/* ROLE NULL////////////////////////////////////// */}\r\n\r\n      {(globalState.role === null) ?\r\n        <Switch>\r\n          <Route path=\"*\" ><h1>LOADING......</h1></Route>\r\n        </Switch>\r\n        : null\r\n      }\r\n\r\n      {/* ROLE LOGGEDOUT////////////////////////////////////// */}\r\n\r\n      {(globalState.role === \"loggedout\") ?\r\n        <Switch>\r\n          <Route exact path=\"/\"><Home /></Route>\r\n\r\n          <Route path=\"/signup\"><Signup /></Route>\r\n\r\n          <Route path=\"/login\"><Login /></Route>\r\n\r\n          <Route path=\"*\" ><Redirect to=\"/\" /></Route>\r\n\r\n        </Switch>\r\n\r\n        : null\r\n      }\r\n\r\n\r\n\r\n      {/* ROLE USER ////////////////////////////////////// */}\r\n      {(globalState.role === \"user\") ?\r\n        <Switch>\r\n          <Route exact path=\"/\"><Dashbard /></Route>\r\n\r\n          {/* <Route path=\"/basket\"><Basket /></Route>\r\n\r\n          <Route path=\"/Checkout\"><Checkout /></Route>\r\n\r\n          <Route path=\"/myorders\"><Myorders /></Route> */}\r\n\r\n          <Route path=\"*\"><Redirect to=\"/\" /></Route>\r\n        </Switch>\r\n        : null\r\n      }\r\n\r\n      {/* ROLE ADMIN ////////////////////////////////////// */}\r\n      {\r\n        (globalState.role === \"admin\") ?\r\n          <Switch>\r\n\r\n            <Route exact path=\"/\"><AdminDashboard /></Route>\r\n\r\n            {/* <Route path=\"/addproducts\"><AddProduct /></Route> */}\r\n\r\n            <Route path=\"*\" ><Redirect to=\"/\" /></Route>\r\n\r\n            {/* <Route path=\"*\" ><h1>404! Page Not Found</h1></Route> */}\r\n\r\n          </Switch>\r\n          : null\r\n      }\r\n\r\n      {/* ADMIN ROUTES REGISTERED/////////////////////////////////////////// */}\r\n      {/* {a === \"admin\" ?\r\n        <Switch>\r\n          <Route exact path=\"/\" ><h2>ADMIn found successfully</h2></Route>\r\n          <Route exact path=\"/abc\" ><h2>ADMIn found abc</h2></Route>\r\n          <Route path=\"*\" ><h2>ADMIN not found</h2></Route>\r\n        </Switch>\r\n        : null\r\n      } */}\r\n\r\n      {/* USER ROUTES REGISTERED/////////////////////////////////////////// */}\r\n\r\n      {/* {a === \"user\" ?\r\n        <Switch>\r\n          <Route exact path=\"/\" ><h2>USER found successfully</h2></Route>\r\n          <Route exact path=\"/abc\" ><h2>USER found abc</h2></Route>\r\n          <Route path=\"*\" ><h2>USER not found</h2></Route>\r\n        </Switch>\r\n        : null\r\n      } */}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n// class App extends Component {\r\n\r\n//   state = {\r\n//     isOpen: false\r\n//   };\r\n\r\n//   toggleCollapse = () => {\r\n//     this.setState({ isOpen: !this.state.isOpen });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <Router>\r\n//           <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n//             <MDBNavbarBrand>\r\n//               <strong className=\"white-text\">Navbar</strong>\r\n//             </MDBNavbarBrand>\r\n//             <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n//             <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n//               <MDBNavbarNav left>\r\n//                 <MDBNavItem active>\r\n//                   <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink to=\"#!\">Features</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink to=\"#!\">Pricing</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//               </MDBNavbarNav>\r\n//               <MDBNavbarNav right>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n//                     <MDBIcon fab icon=\"twitter\" />\r\n//                   </MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n//                     <MDBIcon fab icon=\"google-plus-g\" />\r\n//                   </MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink to=\"/login\">Login</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//                 <MDBNavItem>\r\n//                   <MDBNavLink to=\"/signup\">Signup</MDBNavLink>\r\n//                 </MDBNavItem>\r\n//               </MDBNavbarNav>\r\n//             </MDBCollapse>\r\n//           </MDBNavbar>\r\n\r\n//           <Switch>\r\n//             {(globalState.loginStatus === false) ?\r\n//               <Route path=\"/\">\r\n//                 <Login />\r\n//               </Route> :\r\n//               <Route path=\"/\">\r\n//                 <Dashboard />\r\n//               </Route>\r\n\r\n//             }\r\n//             <Route exact path=\"/home\">\r\n//               <Home />\r\n//             </Route>\r\n//             <Route path=\"/signup\">\r\n//               <Signup />\r\n//             </Route>\r\n//           </Switch>\r\n\r\n//         </Router>\r\n//       </>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { GlobalStateProvider } from './Context/globaleContext';\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <GlobalStateProvider>\r\n        <App />\r\n      </GlobalStateProvider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}